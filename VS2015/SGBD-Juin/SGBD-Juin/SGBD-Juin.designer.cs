#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SGBD_Juin
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SGBD-Juin")]
	public partial class SGBD_JuinDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdministrative(Administrative instance);
    partial void UpdateAdministrative(Administrative instance);
    partial void DeleteAdministrative(Administrative instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertTechnical(Technical instance);
    partial void UpdateTechnical(Technical instance);
    partial void DeleteTechnical(Technical instance);
    partial void InsertTicket(Ticket instance);
    partial void UpdateTicket(Ticket instance);
    partial void DeleteTicket(Ticket instance);
    partial void InsertIntervention(Intervention instance);
    partial void UpdateIntervention(Intervention instance);
    partial void DeleteIntervention(Intervention instance);
    #endregion
		
		public SGBD_JuinDataContext() : 
				base(global::SGBD_Juin.Properties.Settings.Default.SGBD_JuinConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SGBD_JuinDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SGBD_JuinDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SGBD_JuinDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SGBD_JuinDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Administrative> Administratives
		{
			get
			{
				return this.GetTable<Administrative>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Technical> Technicals
		{
			get
			{
				return this.GetTable<Technical>();
			}
		}
		
		public System.Data.Linq.Table<Ticket> Tickets
		{
			get
			{
				return this.GetTable<Ticket>();
			}
		}
		
		public System.Data.Linq.Table<V_AllTicket> V_AllTickets
		{
			get
			{
				return this.GetTable<V_AllTicket>();
			}
		}
		
		public System.Data.Linq.Table<V_OpenedTicket> V_OpenedTickets
		{
			get
			{
				return this.GetTable<V_OpenedTicket>();
			}
		}
		
		public System.Data.Linq.Table<Intervention> Interventions
		{
			get
			{
				return this.GetTable<Intervention>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Delete_Intervention")]
		public int PS_Delete_Intervention([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDIntervention", DbType="Int")] System.Nullable<int> iDIntervention)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDIntervention);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Update_User")]
		public int PS_Update_User([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Usn", DbType="NVarChar(101)")] string usn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pwd", DbType="NVarChar(100)")] string pwd, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FName", DbType="NVarChar(50)")] string fName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LName", DbType="NVarChar(50)")] string lName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Mail", DbType="NText")] string mail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FAdmin", DbType="Bit")] System.Nullable<bool> fAdmin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FActive", DbType="Bit")] System.Nullable<bool> fActive, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FDelete", DbType="Bit")] System.Nullable<bool> fDelete)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, usn, pwd, fName, lName, mail, fAdmin, fActive, fDelete);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Delete_Ticket")]
		public int PS_Delete_Ticket([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDTicket", DbType="Int")] System.Nullable<int> iDTicket)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDTicket);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Delete_User")]
		public int PS_Delete_User([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Usn", DbType="NVarChar(101)")] string usn)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usn);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Insert_Administrative")]
		public int PS_Insert_Administrative([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDUser", DbType="Int")] System.Nullable<int> iDUser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Salary", DbType="Float")] System.Nullable<double> salary, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InternPhone", DbType="NVarChar(5)")] string internPhone)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDUser, salary, internPhone);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Insert_Customer")]
		public int PS_Insert_Customer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZipCode", DbType="NVarChar(4)")] string zipCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="NVarChar(100)")] string city, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Street", DbType="NVarChar(100)")] string street, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StreetNB", DbType="NVarChar(4)")] string streetNB, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StreetBOX", DbType="NVarChar(2)")] string streetBOX, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tel", DbType="NVarChar(10)")] string tel, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fax", DbType="NVarChar(10)")] string fax, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Mail", DbType="NText")] string mail)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, zipCode, city, street, streetNB, streetBOX, tel, fax, mail);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Insert_Technical")]
		public int PS_Insert_Technical([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDUser", DbType="Int")] System.Nullable<int> iDUser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HourRate", DbType="Float")] System.Nullable<double> hourRate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GSM", DbType="NVarChar(10)")] string gSM)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDUser, hourRate, gSM);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Insert_Ticket")]
		public int PS_Insert_Ticket([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDCustomer", DbType="Int")] System.Nullable<int> iDCustomer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDAdministrative", DbType="Int")] System.Nullable<int> iDAdministrative, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Subject", DbType="NVarChar(255)")] string subject, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateIN", DbType="DateTime")] System.Nullable<System.DateTime> dateIN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Note", DbType="NText")] string note)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDCustomer, iDAdministrative, subject, dateIN, note);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Insert_User")]
		public int PS_Insert_User([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Usn", DbType="NVarChar(101)")] string usn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pwd", DbType="NVarChar(100)")] string pwd, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FName", DbType="NVarChar(50)")] string fName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="LName", DbType="NVarChar(50)")] string lName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Mail", DbType="NText")] string mail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FAdmin", DbType="Bit")] System.Nullable<bool> fAdmin)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usn, pwd, fName, lName, mail, fAdmin);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Other_ActivateUser")]
		public int PS_Other_ActivateUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Usn", DbType="NVarChar(101)")] string usn)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usn);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Other_AddInterventionNote")]
		public int PS_Other_AddInterventionNote([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDIntervention", DbType="Int")] System.Nullable<int> iDIntervention, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Note", DbType="NText")] string note)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDIntervention, note);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Other_AddTicketNote")]
		public int PS_Other_AddTicketNote([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDTicket", DbType="Int")] System.Nullable<int> iDTicket, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Note", DbType="NText")] string note)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDTicket, note);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Other_ChangeUsername")]
		public int PS_Other_ChangeUsername([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDUser", DbType="Int")] System.Nullable<int> iDUser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Usn", DbType="NVarChar(101)")] string usn)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDUser, usn);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Other_ChangeUserPassword")]
		public int PS_Other_ChangeUserPassword([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Usn", DbType="NVarChar(101)")] string usn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Pwd", DbType="NVarChar(100)")] string pwd)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usn, pwd);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Other_ConcludeTicket")]
		public int PS_Other_ConcludeTicket([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDTicket", DbType="Int")] System.Nullable<int> iDTicket)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDTicket);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Other_DeactivateUser")]
		public int PS_Other_DeactivateUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Usn", DbType="NVarChar(101)")] string usn)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usn);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Other_ReopenTicket")]
		public int PS_Other_ReopenTicket([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDTicket", DbType="Int")] System.Nullable<int> iDTicket)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDTicket);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Undelete_User")]
		public int PS_Undelete_User([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Usn", DbType="NVarChar(101)")] string usn)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), usn);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Update_Administrative")]
		public int PS_Update_Administrative([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDUser", DbType="Int")] System.Nullable<int> iDUser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Salary", DbType="Float")] System.Nullable<double> salary, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InternPhone", DbType="NVarChar(5)")] string internPhone)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDUser, salary, internPhone);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Update_Customer")]
		public int PS_Update_Customer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZipCode", DbType="NVarChar(4)")] string zipCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="NVarChar(100)")] string city, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Street", DbType="NVarChar(100)")] string street, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StreetNB", DbType="NVarChar(4)")] string streetNB, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StreetBOX", DbType="NVarChar(2)")] string streetBOX, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Tel", DbType="NVarChar(10)")] string tel, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Fax", DbType="NVarChar(10)")] string fax, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Mail", DbType="NText")] string mail)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, zipCode, city, street, streetNB, streetBOX, tel, fax, mail);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Update_Technical")]
		public int PS_Update_Technical([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDuser", DbType="Int")] System.Nullable<int> iDuser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HourRate", DbType="Float")] System.Nullable<double> hourRate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GSM", DbType="NVarChar(10)")] string gSM)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDuser, hourRate, gSM);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Update_Ticket")]
		public int PS_Update_Ticket([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDCustomer", DbType="Int")] System.Nullable<int> iDCustomer, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDAdministrative", DbType="Int")] System.Nullable<int> iDAdministrative, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Subject", DbType="NVarChar(255)")] string subject, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateIN", DbType="DateTime")] System.Nullable<System.DateTime> dateIN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Note", DbType="NText")] string note, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FFinished", DbType="Bit")] System.Nullable<bool> fFinished)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, iDCustomer, iDAdministrative, subject, dateIN, note, fFinished);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Insert_Intervention")]
		public int PS_Insert_Intervention([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDTicket", DbType="Int")] System.Nullable<int> iDTicket, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDTechnical", DbType="Int")] System.Nullable<int> iDTechnical, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateBegin", DbType="DateTime")] System.Nullable<System.DateTime> dateBegin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateEnd", DbType="DateTime")] System.Nullable<System.DateTime> dateEnd, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Subject", DbType="NVarChar(255)")] string subject, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TechnicalNote", DbType="NText")] string technicalNote)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDTicket, iDTechnical, dateBegin, dateEnd, subject, technicalNote);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_Update_Intervention")]
		public int PS_Update_Intervention([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="Int")] System.Nullable<int> iD, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDTicket", DbType="Int")] System.Nullable<int> iDTicket, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDTechnical", DbType="Int")] System.Nullable<int> iDTechnical, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateBegin", DbType="DateTime")] System.Nullable<System.DateTime> dateBegin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateEnd", DbType="DateTime")] System.Nullable<System.DateTime> dateEnd, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Subject", DbType="NVarChar(255)")] string subject, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Note", DbType="NText")] string note)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iD, iDTicket, iDTechnical, dateBegin, dateEnd, subject, note);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Administrative")]
	public partial class Administrative : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDUser;
		
		private double _Salary;
		
		private string _InternPhone;
		
		private EntitySet<Ticket> _Tickets;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDUserChanging(int value);
    partial void OnIDUserChanged();
    partial void OnSalaryChanging(double value);
    partial void OnSalaryChanged();
    partial void OnInternPhoneChanging(string value);
    partial void OnInternPhoneChanged();
    #endregion
		
		public Administrative()
		{
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", DbType="Int NOT NULL")]
		public int IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUserChanging(value);
					this.SendPropertyChanging();
					this._IDUser = value;
					this.SendPropertyChanged("IDUser");
					this.OnIDUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Float NOT NULL")]
		public double Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternPhone", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string InternPhone
		{
			get
			{
				return this._InternPhone;
			}
			set
			{
				if ((this._InternPhone != value))
				{
					this.OnInternPhoneChanging(value);
					this.SendPropertyChanging();
					this._InternPhone = value;
					this.SendPropertyChanged("InternPhone");
					this.OnInternPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrative_Ticket", Storage="_Tickets", ThisKey="ID", OtherKey="IDAdministrative")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Administrative", Storage="_User", ThisKey="IDUser", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Administratives.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Administratives.Add(this);
						this._IDUser = value.ID;
					}
					else
					{
						this._IDUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Administrative = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Administrative = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Usn;
		
		private string _Pwd;
		
		private string _FName;
		
		private string _LName;
		
		private string _Mail;
		
		private bool _FAdmin;
		
		private bool _FActive;
		
		private bool _FDelete;
		
		private EntitySet<Administrative> _Administratives;
		
		private EntitySet<Technical> _Technicals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsnChanging(string value);
    partial void OnUsnChanged();
    partial void OnPwdChanging(string value);
    partial void OnPwdChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnFAdminChanging(bool value);
    partial void OnFAdminChanged();
    partial void OnFActiveChanging(bool value);
    partial void OnFActiveChanged();
    partial void OnFDeleteChanging(bool value);
    partial void OnFDeleteChanged();
    #endregion
		
		public User()
		{
			this._Administratives = new EntitySet<Administrative>(new Action<Administrative>(this.attach_Administratives), new Action<Administrative>(this.detach_Administratives));
			this._Technicals = new EntitySet<Technical>(new Action<Technical>(this.attach_Technicals), new Action<Technical>(this.detach_Technicals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usn", DbType="NVarChar(101) NOT NULL", CanBeNull=false)]
		public string Usn
		{
			get
			{
				return this._Usn;
			}
			set
			{
				if ((this._Usn != value))
				{
					this.OnUsnChanging(value);
					this.SendPropertyChanging();
					this._Usn = value;
					this.SendPropertyChanged("Usn");
					this.OnUsnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pwd", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Pwd
		{
			get
			{
				return this._Pwd;
			}
			set
			{
				if ((this._Pwd != value))
				{
					this.OnPwdChanging(value);
					this.SendPropertyChanging();
					this._Pwd = value;
					this.SendPropertyChanged("Pwd");
					this.OnPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LName
		{
			get
			{
				return this._LName;
			}
			set
			{
				if ((this._LName != value))
				{
					this.OnLNameChanging(value);
					this.SendPropertyChanging();
					this._LName = value;
					this.SendPropertyChanged("LName");
					this.OnLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAdmin", DbType="Bit NOT NULL")]
		public bool FAdmin
		{
			get
			{
				return this._FAdmin;
			}
			set
			{
				if ((this._FAdmin != value))
				{
					this.OnFAdminChanging(value);
					this.SendPropertyChanging();
					this._FAdmin = value;
					this.SendPropertyChanged("FAdmin");
					this.OnFAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FActive", DbType="Bit NOT NULL")]
		public bool FActive
		{
			get
			{
				return this._FActive;
			}
			set
			{
				if ((this._FActive != value))
				{
					this.OnFActiveChanging(value);
					this.SendPropertyChanging();
					this._FActive = value;
					this.SendPropertyChanged("FActive");
					this.OnFActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FDelete", DbType="Bit NOT NULL")]
		public bool FDelete
		{
			get
			{
				return this._FDelete;
			}
			set
			{
				if ((this._FDelete != value))
				{
					this.OnFDeleteChanging(value);
					this.SendPropertyChanging();
					this._FDelete = value;
					this.SendPropertyChanged("FDelete");
					this.OnFDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Administrative", Storage="_Administratives", ThisKey="ID", OtherKey="IDUser")]
		public EntitySet<Administrative> Administratives
		{
			get
			{
				return this._Administratives;
			}
			set
			{
				this._Administratives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Technical", Storage="_Technicals", ThisKey="ID", OtherKey="IDUser")]
		public EntitySet<Technical> Technicals
		{
			get
			{
				return this._Technicals;
			}
			set
			{
				this._Technicals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Administratives(Administrative entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Administratives(Administrative entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Technicals(Technical entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Technicals(Technical entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _ZipCode;
		
		private string _City;
		
		private string _Street;
		
		private string _StreetNB;
		
		private string _StreetBOX;
		
		private string _Tel;
		
		private string _Fax;
		
		private string _Mail;
		
		private EntitySet<Ticket> _Tickets;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnStreetNBChanging(string value);
    partial void OnStreetNBChanged();
    partial void OnStreetBOXChanging(string value);
    partial void OnStreetBOXChanged();
    partial void OnTelChanging(string value);
    partial void OnTelChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    #endregion
		
		public Customer()
		{
			this._Tickets = new EntitySet<Ticket>(new Action<Ticket>(this.attach_Tickets), new Action<Ticket>(this.detach_Tickets));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetNB", DbType="NVarChar(4) NOT NULL", CanBeNull=false)]
		public string StreetNB
		{
			get
			{
				return this._StreetNB;
			}
			set
			{
				if ((this._StreetNB != value))
				{
					this.OnStreetNBChanging(value);
					this.SendPropertyChanging();
					this._StreetNB = value;
					this.SendPropertyChanged("StreetNB");
					this.OnStreetNBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetBOX", DbType="NVarChar(2)")]
		public string StreetBOX
		{
			get
			{
				return this._StreetBOX;
			}
			set
			{
				if ((this._StreetBOX != value))
				{
					this.OnStreetBOXChanging(value);
					this.SendPropertyChanging();
					this._StreetBOX = value;
					this.SendPropertyChanged("StreetBOX");
					this.OnStreetBOXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tel", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Tel
		{
			get
			{
				return this._Tel;
			}
			set
			{
				if ((this._Tel != value))
				{
					this.OnTelChanging(value);
					this.SendPropertyChanging();
					this._Tel = value;
					this.SendPropertyChanged("Tel");
					this.OnTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(10)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Ticket", Storage="_Tickets", ThisKey="ID", OtherKey="IDCustomer")]
		public EntitySet<Ticket> Tickets
		{
			get
			{
				return this._Tickets;
			}
			set
			{
				this._Tickets.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Tickets(Ticket entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technical")]
	public partial class Technical : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDUser;
		
		private double _HourRate;
		
		private string _GSM;
		
		private EntitySet<Intervention> _Interventions;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDUserChanging(int value);
    partial void OnIDUserChanged();
    partial void OnHourRateChanging(double value);
    partial void OnHourRateChanged();
    partial void OnGSMChanging(string value);
    partial void OnGSMChanged();
    #endregion
		
		public Technical()
		{
			this._Interventions = new EntitySet<Intervention>(new Action<Intervention>(this.attach_Interventions), new Action<Intervention>(this.detach_Interventions));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUser", DbType="Int NOT NULL")]
		public int IDUser
		{
			get
			{
				return this._IDUser;
			}
			set
			{
				if ((this._IDUser != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUserChanging(value);
					this.SendPropertyChanging();
					this._IDUser = value;
					this.SendPropertyChanged("IDUser");
					this.OnIDUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HourRate", DbType="Float NOT NULL")]
		public double HourRate
		{
			get
			{
				return this._HourRate;
			}
			set
			{
				if ((this._HourRate != value))
				{
					this.OnHourRateChanging(value);
					this.SendPropertyChanging();
					this._HourRate = value;
					this.SendPropertyChanged("HourRate");
					this.OnHourRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GSM", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string GSM
		{
			get
			{
				return this._GSM;
			}
			set
			{
				if ((this._GSM != value))
				{
					this.OnGSMChanging(value);
					this.SendPropertyChanging();
					this._GSM = value;
					this.SendPropertyChanged("GSM");
					this.OnGSMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Technical_Intervention", Storage="_Interventions", ThisKey="ID", OtherKey="IDTechnical")]
		public EntitySet<Intervention> Interventions
		{
			get
			{
				return this._Interventions;
			}
			set
			{
				this._Interventions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Technical", Storage="_User", ThisKey="IDUser", OtherKey="ID", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Technicals.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Technicals.Add(this);
						this._IDUser = value.ID;
					}
					else
					{
						this._IDUser = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Interventions(Intervention entity)
		{
			this.SendPropertyChanging();
			entity.Technical = this;
		}
		
		private void detach_Interventions(Intervention entity)
		{
			this.SendPropertyChanging();
			entity.Technical = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ticket")]
	public partial class Ticket : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDCustomer;
		
		private int _IDAdministrative;
		
		private string _Subject;
		
		private System.DateTime _DateIN;
		
		private string _Note;
		
		private bool _FFinished;
		
		private EntitySet<Intervention> _Interventions;
		
		private EntityRef<Administrative> _Administrative;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDCustomerChanging(int value);
    partial void OnIDCustomerChanged();
    partial void OnIDAdministrativeChanging(int value);
    partial void OnIDAdministrativeChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnDateINChanging(System.DateTime value);
    partial void OnDateINChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnFFinishedChanging(bool value);
    partial void OnFFinishedChanged();
    #endregion
		
		public Ticket()
		{
			this._Interventions = new EntitySet<Intervention>(new Action<Intervention>(this.attach_Interventions), new Action<Intervention>(this.detach_Interventions));
			this._Administrative = default(EntityRef<Administrative>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCustomer", DbType="Int NOT NULL")]
		public int IDCustomer
		{
			get
			{
				return this._IDCustomer;
			}
			set
			{
				if ((this._IDCustomer != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCustomerChanging(value);
					this.SendPropertyChanging();
					this._IDCustomer = value;
					this.SendPropertyChanged("IDCustomer");
					this.OnIDCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAdministrative", DbType="Int NOT NULL")]
		public int IDAdministrative
		{
			get
			{
				return this._IDAdministrative;
			}
			set
			{
				if ((this._IDAdministrative != value))
				{
					if (this._Administrative.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDAdministrativeChanging(value);
					this.SendPropertyChanging();
					this._IDAdministrative = value;
					this.SendPropertyChanged("IDAdministrative");
					this.OnIDAdministrativeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateIN", DbType="DateTime NOT NULL")]
		public System.DateTime DateIN
		{
			get
			{
				return this._DateIN;
			}
			set
			{
				if ((this._DateIN != value))
				{
					this.OnDateINChanging(value);
					this.SendPropertyChanging();
					this._DateIN = value;
					this.SendPropertyChanged("DateIN");
					this.OnDateINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FFinished", DbType="Bit NOT NULL")]
		public bool FFinished
		{
			get
			{
				return this._FFinished;
			}
			set
			{
				if ((this._FFinished != value))
				{
					this.OnFFinishedChanging(value);
					this.SendPropertyChanging();
					this._FFinished = value;
					this.SendPropertyChanged("FFinished");
					this.OnFFinishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Intervention", Storage="_Interventions", ThisKey="ID", OtherKey="IDTicket")]
		public EntitySet<Intervention> Interventions
		{
			get
			{
				return this._Interventions;
			}
			set
			{
				this._Interventions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Administrative_Ticket", Storage="_Administrative", ThisKey="IDAdministrative", OtherKey="ID", IsForeignKey=true)]
		public Administrative Administrative
		{
			get
			{
				return this._Administrative.Entity;
			}
			set
			{
				Administrative previousValue = this._Administrative.Entity;
				if (((previousValue != value) 
							|| (this._Administrative.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Administrative.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Administrative.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._IDAdministrative = value.ID;
					}
					else
					{
						this._IDAdministrative = default(int);
					}
					this.SendPropertyChanged("Administrative");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Ticket", Storage="_Customer", ThisKey="IDCustomer", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Tickets.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Tickets.Add(this);
						this._IDCustomer = value.ID;
					}
					else
					{
						this._IDCustomer = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Interventions(Intervention entity)
		{
			this.SendPropertyChanging();
			entity.Ticket = this;
		}
		
		private void detach_Interventions(Intervention entity)
		{
			this.SendPropertyChanging();
			entity.Ticket = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_AllTickets")]
	public partial class V_AllTicket
	{
		
		private int _ID;
		
		private string _Name;
		
		private string _Subject;
		
		private System.DateTime _DateIN;
		
		public V_AllTicket()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateIN", DbType="DateTime NOT NULL")]
		public System.DateTime DateIN
		{
			get
			{
				return this._DateIN;
			}
			set
			{
				if ((this._DateIN != value))
				{
					this._DateIN = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_OpenedTicket")]
	public partial class V_OpenedTicket
	{
		
		private int _ID;
		
		private string _Name;
		
		private string _Subject;
		
		private System.DateTime _DateIN;
		
		public V_OpenedTicket()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this._Subject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateIN", DbType="DateTime NOT NULL")]
		public System.DateTime DateIN
		{
			get
			{
				return this._DateIN;
			}
			set
			{
				if ((this._DateIN != value))
				{
					this._DateIN = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Intervention")]
	public partial class Intervention : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDTicket;
		
		private int _IDTechnical;
		
		private System.DateTime _DateBegin;
		
		private System.DateTime _DateEnd;
		
		private string _Subject;
		
		private string _TechnicalNote;
		
		private EntityRef<Technical> _Technical;
		
		private EntityRef<Ticket> _Ticket;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDTicketChanging(int value);
    partial void OnIDTicketChanged();
    partial void OnIDTechnicalChanging(int value);
    partial void OnIDTechnicalChanged();
    partial void OnDateBeginChanging(System.DateTime value);
    partial void OnDateBeginChanged();
    partial void OnDateEndChanging(System.DateTime value);
    partial void OnDateEndChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnTechnicalNoteChanging(string value);
    partial void OnTechnicalNoteChanged();
    #endregion
		
		public Intervention()
		{
			this._Technical = default(EntityRef<Technical>);
			this._Ticket = default(EntityRef<Ticket>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTicket", DbType="Int NOT NULL")]
		public int IDTicket
		{
			get
			{
				return this._IDTicket;
			}
			set
			{
				if ((this._IDTicket != value))
				{
					if (this._Ticket.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTicketChanging(value);
					this.SendPropertyChanging();
					this._IDTicket = value;
					this.SendPropertyChanged("IDTicket");
					this.OnIDTicketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTechnical", DbType="Int NOT NULL")]
		public int IDTechnical
		{
			get
			{
				return this._IDTechnical;
			}
			set
			{
				if ((this._IDTechnical != value))
				{
					if (this._Technical.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTechnicalChanging(value);
					this.SendPropertyChanging();
					this._IDTechnical = value;
					this.SendPropertyChanged("IDTechnical");
					this.OnIDTechnicalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime NOT NULL")]
		public System.DateTime DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this.OnDateBeginChanging(value);
					this.SendPropertyChanging();
					this._DateBegin = value;
					this.SendPropertyChanged("DateBegin");
					this.OnDateBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime NOT NULL")]
		public System.DateTime DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalNote", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TechnicalNote
		{
			get
			{
				return this._TechnicalNote;
			}
			set
			{
				if ((this._TechnicalNote != value))
				{
					this.OnTechnicalNoteChanging(value);
					this.SendPropertyChanging();
					this._TechnicalNote = value;
					this.SendPropertyChanged("TechnicalNote");
					this.OnTechnicalNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Technical_Intervention", Storage="_Technical", ThisKey="IDTechnical", OtherKey="ID", IsForeignKey=true)]
		public Technical Technical
		{
			get
			{
				return this._Technical.Entity;
			}
			set
			{
				Technical previousValue = this._Technical.Entity;
				if (((previousValue != value) 
							|| (this._Technical.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Technical.Entity = null;
						previousValue.Interventions.Remove(this);
					}
					this._Technical.Entity = value;
					if ((value != null))
					{
						value.Interventions.Add(this);
						this._IDTechnical = value.ID;
					}
					else
					{
						this._IDTechnical = default(int);
					}
					this.SendPropertyChanged("Technical");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ticket_Intervention", Storage="_Ticket", ThisKey="IDTicket", OtherKey="ID", IsForeignKey=true)]
		public Ticket Ticket
		{
			get
			{
				return this._Ticket.Entity;
			}
			set
			{
				Ticket previousValue = this._Ticket.Entity;
				if (((previousValue != value) 
							|| (this._Ticket.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ticket.Entity = null;
						previousValue.Interventions.Remove(this);
					}
					this._Ticket.Entity = value;
					if ((value != null))
					{
						value.Interventions.Add(this);
						this._IDTicket = value.ID;
					}
					else
					{
						this._IDTicket = default(int);
					}
					this.SendPropertyChanged("Ticket");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
